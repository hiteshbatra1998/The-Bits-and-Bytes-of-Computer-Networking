------------------------------------------------------------------------------------------------------------------------------------------------------------------
**********
Linux Boot-up Process

An operating system (OS) is the low-level software that manages resources, controls peripherals, and provides basic services to other software.
In Linux, there are 6 distinct stages in the typical booting process.

1. BIOS - BIOS is firmware used to perform hardware initialization during the booting process, and to provide runtime services for operating systems and programs. 
          The BIOS firmware comes pre-installed on a personal computer's system board, and it is the first software to run when powered on. 

- BIOS stands for Basic Input/Output System
- Performs some system integrity checks
- Searches, loads, and executes the boot loader program.
- It looks for boot loader in floppy, cd-rom, or hard drive. You can press a key F12 of F2 during the BIOS startup to change the boot sequence.
- Once the boot loader program is detected and loaded into the memory, BIOS gives the control to it.
- So, in simple terms BIOS loads and executes the MBR boot loader.  

2. MBR
- MBR stands for Master Boot Record.
- It is located in the 1st sector of the bootable disk. Typically /dev/hda, or /dev/sda
- MBR is less than 512 bytes in size. This has three components 
    1) primary boot loader info in 1st 446 bytes 
    2) partition table info in next 64 bytes 
    3) mbr validation check in last 2 bytes.
- It contains information about GRUB (or LILO in old systems).
- So, in simple terms MBR loads and executes the GRUB boot loader.
- The MBR is the first sector of the computer hard drive that tells the computer how to load the operating system, 
  how the hard drive is partitioned.

3. GRUB/ LILO (Linux Loader)
- GRUB stands for Grand Unified Bootloader.
- If you have multiple kernel images installed on your system, you can choose which one to be executed.
- GRUB displays a splash screen, waits for few seconds, if you don’t enter anything, it loads the default kernel image as specified in the grub configuration file.
- GRUB has the knowledge of the filesystem (the older Linux loader LILO didn’t understand filesystem).
- Grub configuration file is /boot/grub/grub.conf (/etc/grub.conf is a link to this). 
- So, in simple terms GRUB just loads and executes Kernel and initrd images.

4. Kernel
  The Linux® kernel is the main component of a Linux operating system (OS) and is the core interface between a computer's hardware and its processes. It 
  communicates between the 2, managing resources as efficiently as possible.
- Mounts the root file system as specified in the “root=” in grub.conf
- Kernel executes the /sbin/init program
- Since init was the 1st program to be executed by Linux Kernel, it has the process id (PID) of 1.
- initrd stands for Initial RAM Disk.
- initrd is used by kernel as temporary root file system until kernel is booted and the real root file system is mounted. It also contains necessary drivers 
  compiled inside, which helps it to access the hard drive partitions, and other hardware.
- The kernel, if compressed (vmlinuz), will decompress itself. It then sets up system functions such as essential hardware and memory paging, and calls start_kernel() 
  which performs the majority of system setup (interrupts, the rest of memory management, device and driver initialization, etc.). 
  
5. Init
- Init is the parent of all processes, executed by the kernel during the booting of a system. Its principle role is to create processes from a script stored 
  in the file /etc/inittab.
- Looks at the /etc/inittab file to decide the Linux run level.
- Following are the available run levels
    0 – halt
    1 – Single user mode
    2 – Multiuser, without NFS
    3 – Full multiuser mode
    4 – unused
    5 – X11
    6 – reboot
- Init identifies the default initlevel from /etc/inittab and uses that to load all appropriate program.
- Execute ‘grep initdefault /etc/inittab’ on your system to identify the default run level
- Typically you would set the default run level to either 3 or 5.

6. Runlevel programs
- When the Linux system is booting up, you might see various services getting started. For example, it might say “starting sendmail …. OK”. Those are the 
  runlevel programs, executed from the run level directory as defined by your run level.
- Depending on your default init level setting, the system will execute the programs from one of the following directories.
    Run level 0 – /etc/rc.d/rc0.d/
    Run level 1 – /etc/rc.d/rc1.d/
    Run level 2 – /etc/rc.d/rc2.d/
    Run level 3 – /etc/rc.d/rc3.d/
    Run level 4 – /etc/rc.d/rc4.d/
    Run level 5 – /etc/rc.d/rc5.d/
    Run level 6 – /etc/rc.d/rc6.d/
- Programs starts with S are used during startup. S for startup.
- Programs starts with K are used during shutdown. K for kill.    
- A runlevel in other words can be defined as a preset single digit integer for defining the operating state of your LINUX or UNIX-based operating system. 
  Each runlevel designates a different system configuration and allows access to different combination of processes.  
  
 ** Unified Extensible Firmware Interface (UEFI) replaces BIOS.
    UEFI is packed with other features. It supports Secure Boot, which means the operating system can be checked for validity to ensure no malware has tampered 
    with the boot process. It can support networking features right in the UEFI firmware itself, which can aid in remote troubleshooting and configuration.  
  
  
  
  
  
  
